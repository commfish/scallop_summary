<<set-parent_ksh, echo=FALSE,cache=FALSE,eval=TRUE>>=
set_parent('Parent.Rnw')
@

<<load_ksh,echo=FALSE,message=FALSE,warning=FALSE>>=
library(tidyverse)
library(mgcv)
library(maps)
library(mapdata)
library(zoo)
library(reshape2)
library(gridExtra)
library(extrafont)
loadfonts(device="win")
theme_set(theme_bw(base_size=11, base_family='Times New Roman')+
			 	theme(panel.grid.major = element_blank(), 
			 			panel.grid.minor = element_blank(),
			 			strip.background = element_blank())) #,base_family='Times New Roman'
library(lubridate)
library(xtable)
# 
@

<<data_ksh,echo=FALSE,message=FALSE,warning=FALSE>>=
ak <- map_data('worldHires', c('USA:Alaska','Canada'))

values <- c('2016'='#2b8cbebb','2015'='#54278840','2014'='#998ec340',
				'2013'='#d8daeb40','2012'='#fee0b640','2011'='#f1a34040',
				'2010'='#b3580640', '2009'=1) 
breaks <- c('2016','2015','2014','2013','2012','2011','2010','2009')

ksh <- read_csv('../output/ksh.csv')
ksh %>% 
	mutate(Year=factor(Year),
		 Vessel = factor(Vessel),
		 FY = factor(FY),
		 Bed = factor(Bed),
		 dum=1) -> ksh

sh <- read_csv('../output/sh.csv')

by <- read.csv("../output/by.csv")
      by %>%
      mutate(set_date = as.Date(Set_Date, "%m-%d-%Y"),
             date = yday(set_date),
             Year = factor(year),
             Vessel = factor(ADFG)) -> by
      
ages <- read.csv("../output/ages.csv")
   ages %>%
      mutate(set_date = as.Date(set_date, "%Y-%m-%d"),
             date = yday(set_date),
             Year = factor(year),
             Vessel = factor(ADFG),
             annuli = ifelse(annuli>19, 20, annuli)) -> ages
   
adjust <- read.csv("../output/adjust.csv")   
   
source('../code/functions.R')

x <- ksh %>% 
	filter(complete.cases(.), mw.cpue.t>0)
@

\subsection{Kodiak Shelikof District}
\subsubsection{Fishery performance}

\textbf{Biometric synopsis}: Continued decline in numbers, population structure looks ok. 

  The 2016/17 Kodiak Shelikof District scallop fishery opened on July 1, 2016 with a GHL of 25,000 lb of scallop meat. Two vessels particpated in the fishery (Figure \ref{fig:kshvessel}) harvesting 25,120 lb scallop meat with a cpue of 47 lb meat/dredge hour (Table \ref{table:ksht1}). No distinct trends in size of scallops are observed (scallops are not yet aged from the 2016/17 season), nor do the discard rates or meat retention / round weight diverge substantially from historic rates indicating that the trends are related to abundance. Harvest locations were similar to 2014/15 (Figure \ref{fig:map_ksh}). 
  
   \begin{table}[H]
   \centering
   \caption{Kodiak Shelikof District catch summary.}
   
   \label{table:ksht1}
    	\begin{tabular}{lcrrcccc}
  		&&  \multicolumn{2}{c}{Retained catch} & Dredge  & Numer  & Meat wt  & Round wt\\ 
  		Year	&GHL&(lb meat)  & (lb round)              & hours   & hauls   & cpue$^a$ & cpue$^b$    \\ 
  		\hline	
		1993/94& 				&	105,017 	& 1,169,664	&	2,491	& 1,684	& 42 & 542\\
  		1994/95&					&	320,111 	& 3,452,842	&	8,662	& 5,204	& 37 & 565\\
  		1995/96&	closed		&				&				&			&			&	  &	\\
  		1996/97&					&  219,305	& 1,877,268	& 3,466	& 1,914	& 63 & 542\\
  		1997/98&					&  258,346	& 3,097,992	& 5,488	& 3,042	& 47 & 565\\
  		1998/99&					&  179,870	& 2,128,025	& 4,076	& 2,109	& 44 & 522\\
  		1999/00&	180,000		&	187,963	& 1,901,953	& 4,295	& 2,004	& 44 & 443\\
  		2000/01&	180,000		&	180,087	& 1,768,376	& 2,905	& 1,403	& 62 & 609\\
  		2001/02&	180,000		&	179,198	& 1,830,265	& 3,398	& 1,830	& 53 & 539\\
  		2002/03&	180,000		&	179,957	& 1,857,466	& 3,799	& 2,071	& 47 & 489\\
  		2003/04&	180,000		&	180,011	& 1,724,498	& 3,258	& 1,722	& 64 & 529\\
  		2004/05&	180,000		&	174,622	& 1,641,608	& 3,467	& 1,793	& 50 & 474\\
  		2005/06&	160,000		&	159,879	& 1,453,656	& 2,278	& 1,217	& 70 & 638\\
  		2006/07&	160,000		&	161,263	& 1,404,134	& 2,181	& 1,280	& 74 & 644\\
  		2007/08&	170,000		&	170,224	& 1,695,563	& 2,937	& 1,736	& 58 & 577\\
  		2008/09&	170,000		&	12,660 	& 161,065	&  262	&  179	& 48 & 615\\
  		2009/10&	170,000		&	169,928	& 1,667,958	& 3,496	& 1,921	& 49 & 477\\
  		2010/11&	170,000		&	170,947	& 1,887,354	& 3,504	& 2,214	& 49 & 539\\
  		2011/12&	135,000		&	135,957	& 1,432,441	& 2,426	& 1,648	& 56 & 590\\
  		2012/13&	105,000		&	105,802	& 990,580	& 1,994	& 1,341	& 53 & 497\\
  		2013/14&	105,000		&	106,099	& 910,919	& 2,472	& 1,637	& 43 & 369\\
  		2014/15& 105,000$^1$ &  65,938 	& 648,361 	& 1,622	& 1,044	& 41 & 400\\
  		2015/16& 75,000$^2$	&	40,290 	& 447,037	& 1,323 	& 938		& 30 & 338\\
  		2016/17& 25,000 		& 25,120 	& 287,750 	&   830 	& 536 	& 47 & 537\\
  		\hline	
  		\multicolumn{3}{l}{$^a$lb scallop meat wt/dredge hour}	\\
  		\multicolumn{3}{l}{$^b$lb scallop round wt/dredge hour}	\\
  		\multicolumn{3}{l}{$^1$Inseason closure at 65,000}\\
  		\multicolumn{3}{l}{$^2$Inseason closure July 30, 2015}\\
   \end{tabular} 
   \end{table}
   
CPUE was modeled using a genralized additive model (gam) of form  
$$cpue = f_1(depth) + f_2(long,lat) + f_3(bed) + year + vessel$$  
where $fs$ are smoothers, bed is brought in as a random effect, year and vessel are factors. For prediction purposes the depth and locations are held at their median values and the random effect is ignored in order to . Depth = 54, longitude = -153.5095, latitude = 58.5672. Note that this standardization differs from last year in that values are now point estimates based upon a ``generic" bed and vessel at a given depth and location, to be more inline with managing as a district (as opposed to per bed).

<<model_ksh,echo=FALSE,message=FALSE,warning=FALSE>>=
	fit <- bam(mwt.cpue~s(depth, k=4) + te(set_lon, set_lat) + Year + s(Bed, bs='re', by=dum) + s(Vessel, bs='re', by=dum), data=x, gamma=1.4)
	fit1 <-bam(rwt.cpue~s(depth, k=4) + te(set_lon, set_lat) + Year + s(Bed, bs='re', by=dum) + s(Vessel, bs='re', by=dum), data=x, gamma=1.4)
	
	x$fit <- predict(fit, x, type='response')
	x$fit1 <- predict(fit1, x, type='response')
# x %>% summarise(depth=median(depth), long=median(set_lon), lat = median(set_lat))	
	newd <- expand.grid(Vessel = '58200', dum=0, year = unique(x$year), Bed=c('1'),
								depth = 54, set_lon = -153.5095, set_lat = 58.5672)
	newd$Year <- factor(newd$year)

	newd$fit <- as.numeric(predict(fit,newd, type='response'))
	newd$fit1 <- as.numeric(predict(fit1,newd, type='response'))
@


 \begin{table}[H]
   \centering
   \caption{Kodiak Shelikof District catch summary for the 2009/10-2016/17 season for raw and standardized meat weight data. Data in this table are from the Kodiak Wiki*}
   \label{table:ksh2}
   \vspace{1.5ex}
   \begin{tabular}{lrrcrrc}
   \hline
   &\multicolumn{3}{c}{Raw cpue} & Standardized\\ 
   Year	& median&	mean & sd	& cpue\\
   \hline\\[-1.5ex]
   
  <<mwt_std_ksh,echo=FALSE,message=FALSE,warning=FALSE, results="asis">>=
x %>% 
	group_by(year) %>% 
	summarise(median = median((exp(mwt.cpue)-adjust$mwt.adjust)),
             mean = mean((exp(mwt.cpue)-adjust$mwt.adjust)),
             sd = sd((exp(mwt.cpue)-adjust$mwt.adjust))) -> temp


newd %>% 
      group_by(year) %>% 
      summarise('std cpue' = exp(fit)-adjust$mwt.adjust) %>% 
	left_join(temp) %>% 
	dplyr::select(year, median, mean, sd, `std cpue`) %>% 
	as.data.frame() -> temp
	print(xtable(temp,align="llcccc",digits=c(0,0,1,1,1,1), caption="A table", label='table:t1'),
			only.contents=TRUE, include.rownames=FALSE, floating=FALSE, include.colnames=FALSE, hline.after=NULL)

@
   \hline
   \multicolumn{7}{l}{*Data from Wiki are different from older versions.}
   \end{tabular}
   \end{table}
   
 \begin{table}[H]
   \centering
   \caption{Kodiak Shelikof District catch summary for the 2009/10-2016/17 season for raw and standardized round weight data. Data in this table are from the Kodiak Wiki*}
   \label{table:ksh3}
   \vspace{1.5ex}
   \begin{tabular}{lrrcrrc}
   \hline
   &\multicolumn{3}{c}{Raw cpue} & Standardized\\ 
   Year	& median&	mean & sd	& cpue\\
   \hline\\[-1.5ex]
   
  <<rwt_std_ksh,echo=FALSE,message=FALSE,warning=FALSE, results="asis">>=
x %>% 
	group_by(year) %>% 
	summarise(median = median((exp(rwt.cpue)-adjust$rwt.adjust)),
             mean = mean((exp(rwt.cpue)-adjust$rwt.adjust)),
             sd = sd((exp(rwt.cpue)-adjust$rwt.adjust))) -> temp


newd %>% 
      group_by(year) %>% 
      summarise('std cpue' = exp(fit1)-adjust$rwt.adjust) %>% 
	left_join(temp) %>% 
	dplyr::select(year, median, mean, sd, `std cpue`) %>% 
	as.data.frame() -> temp
	print(xtable(temp,align="llcccc",digits=c(0,0,1,1,1,1), caption="A table", label='table:t1'),
			only.contents=TRUE, include.rownames=FALSE, floating=FALSE, include.colnames=FALSE, hline.after=NULL)

@
   \hline
   \multicolumn{7}{l}{*Data from Wiki are different from older versions.}
   \end{tabular}
   \end{table}
   
   
   
<<map_ksh, fig.pos="H", fig.cap="Maps of District KSH fishing locations by fishing year.", echo=FALSE, warning=FALSE ,fig.height=8, cache=TRUE, dev='png', dpi=200>>=
f.district_map(x)
@

<<ksh_mwt_roll,echo=FALSE,fig.pos="H", fig.cap="Annual raw and standardized meat weight CPUE with all years mean, a rolling 5-year mean, and the past five years mean.", warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, warning=FALSE,message=FALSE>>=
x %>% 
	group_by(year) %>%
	summarise(catch = sum(meat_weight, na.rm = T), round = sum(round_weight, na.rm = T),
				 hrs = sum(dredge_hrs), haul = length(meat_weight), cpue = catch/hrs, cpue2 = round/hrs) -> ksh.t1

data.frame(year=1996:2016,cpue=c(63,47,44,44,62,53,47,64,50,70,74,58,48,ksh.t1$cpue)) %>% 
	mutate(mean=mean(cpue),
			 five_year=c(rep(NA,4),rollmean(cpue,5,align='right')),
			 last_five=c(rep(NA, length(cpue)-5), rep(mean(cpue[(length(cpue)-4):length(cpue)]),5))) %>% 
	melt(., id.vars='year')  %>% 
	ggplot(aes(year, value, color=variable))+geom_point()+geom_line()+ylab('Raw CPUE')+xlab('Year')+
	scale_color_manual(values=c('#31a354','black','#f03b20','#3182bd'),  
							 breaks=c('cpue','mean', 'five_year','last_five'), name='Measure')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.15, 0.22),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> r1

newd %>% 
	group_by(year) %>% 
	summarise(std_cpue = mean(fit)) %>% 
	mutate(mean=mean(std_cpue),
		 five_year=c(rep(NA,4),rollmean(std_cpue,5,align='right')),
		 last_five=c(rep(NA, length(std_cpue)-5), rep(mean(std_cpue[(length(std_cpue)-4):length(std_cpue)]),5))) %>% 
	melt(., id.vars='year') %>% 
	ggplot(aes(year, value, color=variable))+geom_point()+geom_line()+ylab('Standardized CPUE')+xlab('Year')+
	scale_color_manual(values=c('#31a354','black','#f03b20','#3182bd'),  
							 breaks=c('std_cpue','mean', 'five_year','last_five'), name='Measure')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+
	theme(legend.key = element_blank(),legend.position = c(0.15, 0.82),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line'))+xlim(1995,2016) -> r2

grid.arrange(r1,r2,ncol=2)
@

<<ksh_rwt_roll,echo=FALSE,fig.pos="H", fig.cap="Annual raw and standardized round weight CPUE with all years mean, a rolling 5-year mean, and the past five years mean.", warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, warning=FALSE,message=FALSE>>=
raw <- data.frame(year=1996:2016,cpue=c(542,565,522,443,609,539,489,529,474,638,644,577,615,ksh.t1$cpue2))%>% 
	mutate(mean=mean(cpue),
			 five_year=c(rep(NA,4),rollmeanr(cpue,5)),
			 last_five=c(rep(NA, length(cpue)-5), rep(mean(cpue[(length(cpue)-4):length(cpue)]),5))) %>% 
	melt(., id.vars='year')  %>% 
	ggplot(aes(year, value, color=variable))+geom_point()+geom_line()+ylab('Raw CPUE')+xlab('Year')+
	scale_color_manual(values=c('#31a354','black','#f03b20','#3182bd'),  
							 breaks=c('cpue','mean', 'five_year','last_five'), name='Measure')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.15, 0.22),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> r1

newd %>% 
	group_by(year) %>% 
	summarise(std_cpue = mean(fit1)) %>% 
	mutate(mean=mean(std_cpue),
			 five_year=c(rep(NA,4),rollmean(std_cpue,5,align='right')),
			 last_five=c(rep(NA, length(std_cpue)-5), rep(mean(std_cpue[(length(std_cpue)-4):length(std_cpue)]),5))) %>% 
	melt(., id.vars='year') %>% 
	ggplot(aes(year, value, color=variable))+geom_point()+geom_line()+ylab('Standardized CPUE')+xlab('Year')+
	scale_color_manual(values=c('#31a354','black','#f03b20','#3182bd'),  
							 breaks=c('std_cpue','mean', 'five_year','last_five'), name='Measure')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+
	theme(legend.key = element_blank(),legend.position = c(0.15, 0.82),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line'))+xlim(1995,2016) -> r2
grid.arrange(r1,r2,ncol=2)
@

<<kshcpue, fig.pos="H", fig.cap="Density and number of tows by bed and year for District KSH meat weight cpue. The left pane shows the CPUE distribution for all of the hauls, the right pane shows the number of hauls for a given CPUE.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>=  
x %>% 
	filter(year>2011) %>% 
	ggplot(aes(mwt.cpue,fill=Year,color=Year))+geom_density()+facet_grid(Bed~., scales='free_y')+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.25),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> m1

x %>% 
	filter(year>2011) %>% 
	ggplot(aes(mwt.cpue,fill=Year,color=Year))+geom_histogram()+facet_grid(Bed~.)+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank()) -> m2
grid.arrange(m1,m2,ncol=2)
@

<<kshfit, fig.pos="H", fig.cap="Density and number of tows by bed and year for District KSH standardized meat weight cpue. The left pane shows the CPUE distribution for all of the hauls, the right pane shows the number of hauls for a given CPUE.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>=
x %>% 
	filter(year>2011) %>% 
	ggplot(aes(fit,fill=Year,color=Year))+geom_density()+facet_grid(Bed~., scales='free_y')+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.25),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> m1

x %>% 
	filter(year>2011) %>% 
	ggplot(aes(fit,fill=Year,color=Year))+geom_histogram()+facet_grid(Bed~.)+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank()) -> m2
grid.arrange(m1,m2,ncol=2)
@

<<kshcpue1, fig.pos="H", fig.cap="Density and number of tows by bed and year for District KSH round weight cpue. The left pane shows the CPUE distribution for all of the hauls, the right pane shows the number of hauls for a given CPUE.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>=  
x %>% 
	filter(year>2011) %>% 
	ggplot(aes(rwt.cpue,fill=Year,color=Year))+geom_density()+facet_grid(Bed~., scales='free_y')+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.25),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> m1

x %>% 
	filter(year>2011) %>% 
	ggplot(aes(rwt.cpue,fill=Year,color=Year))+geom_histogram()+facet_grid(Bed~.)+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank()) -> m2
grid.arrange(m1,m2,ncol=2)
@

<<kshfit1, fig.pos="H", fig.cap="Density and number of tows by bed and year for District KSH standardized round weight cpue. The left pane shows the CPUE distribution for all of the hauls, the right pane shows the number of hauls for a given CPUE.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>=
x %>% 
	filter(year>2011) %>% 
	ggplot(aes(fit1,fill=Year,color=Year))+geom_density()+facet_grid(Bed~., scales='free_y')+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.25),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> m1

x %>% 
	filter(year>2011) %>% 
	ggplot(aes(fit1,fill=Year,color=Year))+geom_histogram()+facet_grid(Bed~.)+xlab('log(cpue)')+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank()) -> m2
grid.arrange(m1,m2,ncol=2)
@

<<kshvessel, fig.pos="H", fig.cap="Annual vessel effect from meat weight cpue model fit, District KSH.",echo=FALSE, warning=FALSE ,fig.height=3.9, cache=FALSE,dev='png',dpi=300, message = FALSE>>=

      ggplot(x, aes(Year,fit, fill=Vessel))+geom_boxplot(width=.35)+ylab('Standardized CPUE')
@
   
<<kshvessel1, fig.pos="H", fig.cap="Annual vessel effect from round weight cpue model fit, District KSH.",echo=FALSE, warning=FALSE ,fig.height=3.9, cache=FALSE,dev='png',dpi=300, message = FALSE>>=
      #Model the CPUE
      #ggplot(ksh, aes(Year,fit, fill=Bed))+geom_boxplot()
      #ggplot(ksh, aes(Vessel,fit, fill=Bed))+geom_boxplot()
      
      ggplot(x, aes(Year,fit1, fill=Vessel))+geom_boxplot(width=.35)+ylab('Standardized CPUE')
@

\subsubsection{Size and age structure of catch}

   Shell sizes were similar to those observed in the 2014/15 fishery. The size structure in the catch does not appear to have changed dramatically over time.

<<kshsh, fig.pos="H", fig.cap="Shell heights by bed and year for District KSH. The left pane shows the distribution of all of the samples, the right pane shows the number of samples by year (stacked bars).",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>= 
ksh.sh <- merge(ksh,sh,by=c('Fishery', 'District','Haul_ID','ADFG'))
                                  
#SH by year
ksh.sh %>% 
	filter(year>2011) %>% 
	ggplot(aes(Shell_Height, fill=Year,color=Year))+geom_density()+facet_grid(Bed~.)+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
	theme(legend.key = element_blank(),legend.position = c(0.15, 0.15),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) + 
	xlab('Shell height (mm)')+ ylab('Density')-> s1

ksh.sh %>% 
	filter(year>2011) %>% 
	ggplot(aes(Shell_Height, fill=Year,color=Year))+geom_histogram()+facet_grid(Bed~.)+
	scale_fill_manual(values=values,breaks=breaks, name='Year')+
	scale_color_manual(values=values,breaks=breaks, name='Year')+
	guides(colour = guide_legend(override.aes = list(alpha = 1)))+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank())+
	xlab('Shell height (mm)')+ ylab('Count') -> s2
grid.arrange(s1,s2,ncol=2)
@

<<kshsh1, fig.pos="H", fig.cap="Retained and discarded shell heights by bed for District KSH in 2016. The left pane shows the distribution for all of the samples, the right pane shows the number samples (stacked bars).",echo=FALSE, warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, message = FALSE>>=
ksh.sh %>% 
	filter(year==2016) %>% 
	ggplot(aes(Shell_Height, fill=Rtnd_Disc,color=Rtnd_Disc))+geom_density(alpha=.2)+facet_grid(Bed~.)+
	scale_color_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	scale_fill_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.75),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) -> s1
ksh.sh %>% 
	filter(year==2016) %>% 
	ggplot(aes(Shell_Height, fill=Rtnd_Disc,color=Rtnd_Disc))+geom_histogram(alpha=.2)+facet_grid(Bed~.)+
	scale_color_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	scale_fill_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank()) -> s2
grid.arrange(s1,s2,ncol=2)
@

<<kshsh3, fig.pos="H", fig.cap="Shell heights by year, all beds combined, for District KSH. The left pane shows the distribution for all of the samples, the right pane shows the number of samples.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE,dev='png', dpi=300, message = FALSE>>=

ksh.sh %>% 
	ggplot(aes(Shell_Height, fill=Rtnd_Disc,color=Rtnd_Disc))+geom_density(alpha=.2)+
	facet_grid(FY~.)+
	scale_color_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	scale_fill_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+ 
	theme(legend.key = element_blank(),legend.position = c(0.2, 0.25),legend.background = 
				element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line')) + 
	xlab('Shell height (mm)') + ylab('Density') -> s1

ksh.sh %>% 
	ggplot(aes(Shell_Height, fill=Rtnd_Disc,color=Rtnd_Disc))+geom_histogram(alpha=.2)+facet_grid(FY~.)+
	scale_color_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	scale_fill_manual( values=c('D'='#e41a1c','R'='#377eb8'), labels=c('discard', 'retain'),name='')+
	guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank())+xlab('Shell height (mm)') + ylab('Count') -> s2
grid.arrange(s1,s2,ncol=2)
@


<<kshage, fig.pos="H", fig.cap="Shell ages (annuli) by bed and year for District KSH. The left pane shows the  distribution for all of the annuli sampled, the right pane shows the number of samples.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message = FALSE>>=   
 ksh %>% 
   	select(Haul_ID, Bed) %>% 
   	left_join(ages) %>% 
   	filter(year>2009) -> ksh.age

   a1 <- ggplot(ksh.age, aes(annuli, fill=Year, color=Year))+geom_density()+facet_grid(Bed~.)+
      scale_fill_manual(values=values, breaks=breaks, name='Year')+
      scale_color_manual(values=values,  breaks=breaks, name='Year')+
      guides(colour = guide_legend(override.aes = list(alpha = 1)))+ 
      theme(legend.key = element_blank(),legend.position = c(0.8, 0.39),legend.background = 
               element_rect(fill = "#ffffffaa", colour = NA),legend.key.height=unit(.6,'line'))
   a2 <- ggplot(ksh.age, aes(annuli, fill=Year, color=Year))+geom_histogram(binwidth=1)+facet_grid(Bed~.)+
      scale_fill_manual(values=values, breaks=breaks, name='Year')+
      scale_color_manual(values=values,  breaks=breaks, name='Year')+
      guides(colour = guide_legend(override.aes = list(alpha = 1)))+
      guides( fill=FALSE, color=FALSE)+ theme(legend.key = element_blank())
   
   grid.arrange(a1,a2,ncol=2)
@

<<allageksh, fig.pos="H", fig.cap="Scallop ages for Kodiak Shelikof District beds.",echo=FALSE, warning=FALSE ,fig.height=8.5, cache=FALSE, dev='png', dpi=300, message=FALSE>>=
ages %>% 
   filter(District=='KSH') %>% 
ggplot(., aes( annuli))+geom_histogram(binwidth=1)+facet_grid(Year~.)
@

 \subsubsection{Scallop discards and crab/halibut bycatch}
 
  An estimated 3,691 Tanner Crab, an increase from the previous year, and 128 Pacific Halibut were incidentally caught (Figure~\ref{fig:kshcrab}). An estimated 48,192 lb of scallops were discarded, 16.8\% of retained round weight. These numbers are in line with what has been observed since 2009.

<<kshcrab, fig.pos="H", fig.cap="Estimated Tanner crab, Pacific halibut, Opilio crab and red king crab bycatch for District KSH.",echo=FALSE, warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, eval=TRUE, message = FALSE>>=    
 a <- aggregate(Halibut_Count~year,data=subset(by, District=='KSH'), FUN=sum)
   a1 <- aggregate(Tanner_Count~year,data=subset(by, District=='KSH'), FUN=sum)
   a2 <- aggregate(Opilio_Count~year,data=subset(by, District=='KSH'), FUN=sum)
   a3 <- aggregate(King_Count~year,data=subset(by, District=='KSH'), FUN=sum)
   b <- aggregate(Sample_Hrs~year,data=subset(by, District=='KSH'), FUN=sum)
   c <- aggregate(dredge_hrs~year,data=ksh, FUN=sum)
   
   d <- merge(a,b, by='year')
   d <- merge(a1,d, by='year')
   d <- merge(a2,d, by='year')
   d <- merge(a3,d, by='year')
   d <- merge(c,d, by='year')
   
   d %>% 
   	mutate(hal = Halibut_Count/Sample_Hrs * dredge_hrs,
   			 tan = Tanner_Count/Sample_Hrs * dredge_hrs,
   			 opi = Opilio_Count/Sample_Hrs * dredge_hrs,
   			 king = King_Count/Sample_Hrs * dredge_hrs) %>% 
   	dplyr::select(year, Sample_Hrs, hal, tan, opi, king) %>% 
   	melt(., id.vars=c('year')) %>% 
   	ggplot(aes(year, value, color=variable, group=variable))+geom_line()+geom_point(size=3)+
      scale_color_discrete(name="species",
                           breaks=c("tan", "hal", "opi", 'king'),
                           labels=c("Tanner", "Halibut", "Opilio", "King"))
@

<<kshdisc, fig.pos="H", fig.cap="Scallop estimated discard weight for District KSH.",echo=FALSE, warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, eval=TRUE, message = FALSE>>=   
    by %>% 
      filter(District=='KSH') %>% 
      group_by(year) %>% 
      summarise(sample.hrs = sum(Sample_Hrs), disc = sum(Discard_Weight ), broken = sum(Broken_Weight),
                rem.disc = sum(Rem_Disc_Wt), wt = sum(disc, broken, rem.disc) ) -> a
   ksh %>% 
      group_by(year) %>% 
      summarise(dredge.hrs = sum(dredge_hrs), round.wt = sum(round_weight)) -> b
   
   discards <- left_join(a,b)
   
   discards %>% 
      mutate(disc= wt/sample.hrs*dredge.hrs, per = disc/round.wt*100)  %>% 
   ggplot(aes(year, disc))+geom_line()+geom_point(size=3)+ylab('Scallop discard weight (lbs)')
@

<<kshdisc1, fig.pos="H", fig.cap="Scallop estimated percent discards relative to retained round weight for District KSH.",echo=FALSE, warning=FALSE ,fig.height=4, cache=FALSE, dev='png', dpi=300, eval=TRUE, message = FALSE, png=TRUE, pdf=FALSE>>= 
   discards %>% 
      mutate(disc_ratio= wt/sample.hrs*dredge.hrs, per = disc_ratio/round.wt*100)  %>% 
   ggplot(aes(year, per))+geom_line()+geom_point(size=3)+ylab('Estimated scallop % discards relative to round weight')
@     

       